import React, { useState } from 'react';
import { Card, Form, Input, Button, List, Spin, message as antdMessage } from 'antd';

const { TextArea } = Input;

const fakeNotifications = [
  { title: 'Ch√†o m·ª´ng', message: '‚ö° C√πng ∆∞u ƒë√£i Freeship 0ƒê m·ªçi ƒë∆°n h√†ng üõí Ch·ªâ b·∫°n m·ªõi c√≥ ƒë·∫∑c quy·ªÅn n√†y üõçÔ∏è Mua s·∫Øm ngay!' },
  { title: 'Khuy·∫øn m√£i', message: 'Gi·∫£m gi√° 20% cho t·∫•t c·∫£ c√°c s√°ch trong tu·∫ßn n√†y!' },
  { title: 'Khuy·∫øn m√£i', message: 'üõíShop m·ªõi GI·∫¢M ƒê·∫æN 50% t·ªõi b·∫øn üö¥‚Äç‚ôÄÔ∏è Th√™m m√£ FREESHIP mu√¥n n∆°i üåû Deal h·ªùi ƒëang ƒë·ª£i, ƒë·∫∑t li·ªÅn b·∫°n ∆°i!' },
];

const NotificationManager = () => {
  const [form] = Form.useForm();
  const [notifications, setNotifications] = useState(fakeNotifications);
  const [spinning, setSpinning] = useState(false);

  const handleAddNotification = async (values) => {
    try {
      setSpinning(true);
      // Gi·∫£ l·∫≠p vi·ªác g·ª≠i th√¥ng b√°o
      await new Promise(resolve => setTimeout(resolve, 1000));
      // Thay b·∫±ng h√†m sendNotification n·∫øu c√≥ API th·ª±c
      setNotifications([...notifications, values]);
      antdMessage.success('G·ª≠i th√¥ng b√°o th√†nh c√¥ng!');
      form.resetFields();
    } catch (error) {
      antdMessage.error('G·ª≠i th√¥ng b√°o th·∫•t b·∫°i!');
    } finally {
      setSpinning(false);
    }
  };

  return (
    <div className="notification-manager" style={{ display: 'flex', gap: '20px' }}>
      <Card title="T·∫°o th√¥ng b√°o m·ªõi" style={{ flex: 1 }}>
        <Spin spinning={spinning}>
          <Form
            form={form}
            layout="vertical"
            onFinish={handleAddNotification}
            initialValues={{
              title: '',
              message: '',
            }}
          >
            <Form.Item
              name="title"
              label="Ti√™u ƒë·ªÅ"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p ti√™u ƒë·ªÅ' }]}
            >
              <Input />
            </Form.Item>
            <Form.Item
              name="message"
              label="N·ªôi dung"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p n·ªôi dung th√¥ng b√°o' }]}
            >
              <TextArea rows={4} />
            </Form.Item>
            <Form.Item>
              <Button type="primary" htmlType="submit">
                G·ª≠i th√¥ng b√°o
              </Button>
            </Form.Item>
          </Form>
        </Spin>
      </Card>
      <Card title="Danh s√°ch th√¥ng b√°o" style={{ flex: 1 }}>
        <Spin spinning={spinning}>
          <List
            itemLayout="horizontal"
            dataSource={notifications}
            renderItem={notification => (
              <List.Item>
                <List.Item.Meta
                  title={notification.title}
                  description={notification.message}
                />
              </List.Item>
            )}
          />
        </Spin>
      </Card>
    </div>
  );
};

export default NotificationManager;
